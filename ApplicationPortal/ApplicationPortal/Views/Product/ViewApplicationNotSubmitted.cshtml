@using ApplicationPortal.Enums

@model ProductViewModel

<h5>General product info of @Model.Id</h5>

@{
    var comments = ViewBag.Comments as List<CommentViewModelResponse>;
}

@if (comments.Count() != 0)
{
    <br />
    <p>Comments left for the product No. @Model.Id:</p>
    <ul>

        @foreach (var comment in comments)
        {
            <li>
                <div>@comment.Text</div>
                @comment.UserEmail
                @comment.CreatedDate
            </li>
        }
    </ul>

    @Html.ActionLink("Add a comment", "CreateAComment", "Comment", new { productId = @Model.Id, isAdmin = false }, new {@class ="btn btn-outline-info"})
    <br />
    @if (Model.Status == ProductStatus.FinallySubmitted)
    {
        @Html.ActionLink("Edit product", "EditNotSubmittedProduct", "Product", new { productId = @Model.Id}, new {@class = "btn btn-primary"/* @style = "color:white"*/})
    }
}
<hr />

<div>
    @Html.DisplayNameFor(q => q.Name)
    @Html.DisplayTextFor(q => q.Name)
</div>

<div>
    @Html.DisplayNameFor(q => q.Model)
    @Html.DisplayTextFor(q => q.Model)
</div>

<div>
    @Html.DisplayNameFor(q => q.Brand)
    @Html.DisplayTextFor(q => q.Brand)
</div>

<div>
    @Html.DisplayNameFor(q => q.Manufacturer)
    @Html.DisplayTextFor(q => q.Manufacturer)
</div>

<hr />

<h5>Technical product info</h5>

<div>
    @Html.DisplayNameFor(q => q.OutputPower)
    @Html.DisplayTextFor(q => q.OutputPower)
</div>

@for (int i = 0; i < Model.Frequencies.Count; i++)
{
    <div class="row">
        <div class="col">
            @Html.DisplayNameFor(q => @Model.Frequencies[i].StartRange)
            @Html.DisplayTextFor(q => @Model.Frequencies[i].StartRange)
        </div>

        <div class="col">
            @Html.DisplayNameFor(q => @Model.Frequencies[i].EndRange)
            @Html.DisplayTextFor(q => @Model.Frequencies[i].EndRange)
        </div>

        <div class="col">
            @Html.DisplayNameFor(q => @Model.Frequencies[i].FrequencyUnit)
            @Html.DisplayTextFor(q => @Model.Frequencies[i].FrequencyUnit)
        </div>
    </div>
}

<div class="row">
    <div class="col">
        @Html.DisplayNameFor(q => @Model.AntennaGain.Amount)
        @Html.DisplayTextFor(q => @Model.AntennaGain.Amount)
    </div>

    <div class="col">
        @Html.DisplayNameFor(q => @Model.AntennaGain.AntennaGainUnit)
        @Html.DisplayTextFor(q => @Model.AntennaGain.AntennaGainUnit)
    </div>
</div>

<hr />

<h5>Additional product info</h5>

<div>
    @Html.DisplayNameFor(q => q.OtherInformation)
    @Html.DisplayTextFor(q => q.OtherInformation)
</div>

<div>
    @Html.DisplayNameFor(q => q.PathToFile)
    @Html.DisplayTextFor(q => q.PathToFile)
</div>
<hr />

@Html.ActionLink("Go back", "GetSubmittedProducts", "Product", @Model, new {@class="btn btn-outline-info"})

@if (Model.Status < ProductStatus.FinallySubmitted)
{
    @Html.ActionLink("Cancel application", "CancelNotSubmittedApplication", "Product", new {productId = @Model.Id}, new {@class="btn btn-danger"})
}
@TempData["cancelProduct"]

@if (Model.Status <= ProductStatus.ExtraInfoSubmitted)
{
    @Html.ActionLink("Continue to fill in", "EditNotSubmittedProduct", "Product", new {productId = @Model.Id}, new {@class="btn btn-outline-success"})
}

@if (Model.Status == ProductStatus.ExtraInfoSubmitted)
{
    @Html.ActionLink("Submit for verification", "SubmitSavedProduct", "Product", new {productId = @Model.Id}, new {@class="btn btn-success"})
}
